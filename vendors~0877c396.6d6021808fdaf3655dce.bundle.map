{"version":3,"sources":["webpack:///./node_modules/@aurelia-ux/icons/dist/native-modules/index.js","webpack:///./node_modules/@aurelia-ux/icons/dist/native-modules/ux-icon.js","webpack:///./node_modules/@aurelia-ux/icons/dist/native-modules/ux-icon.css","webpack:///./node_modules/@aurelia-ux/icons/dist/native-modules/ux-icon.html","webpack:///./node_modules/@aurelia-ux/input/dist/native-modules/index.js","webpack:///./node_modules/@aurelia-ux/input-info/dist/native-modules/index.js","webpack:///./node_modules/@aurelia-ux/input-info/dist/native-modules/ux-input-info.js","webpack:///./node_modules/@aurelia-ux/input-info/dist/native-modules/ux-input-info.css","webpack:///./node_modules/@aurelia-ux/input-info/dist/native-modules/ux-input-info.html","webpack:///./node_modules/@aurelia-ux/input/dist/native-modules/ux-input.js","webpack:///./node_modules/@aurelia-ux/input/dist/native-modules/ux-input.css","webpack:///./node_modules/@aurelia-ux/input/dist/native-modules/ux-input.html","webpack:///./node_modules/@aurelia-ux/icons/dist/native-modules/ux-icon-map.js","webpack:///./node_modules/@aurelia-ux/input-info/dist/native-modules/ux-input-info-theme.js","webpack:///./node_modules/@aurelia-ux/input/dist/native-modules/ux-input-theme.js","webpack:///./node_modules/@aurelia-ux/icons/dist/native-modules/ux-icon-theme.js"],"names":[],"mappings":"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ACA,sB;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AAC6D;AAC3B;AACyB;AACL;AACsD;AAC5G;AAC4D;AAC5D;AACqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kFAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,+CAAG,8BAA8B,gBAAgB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,+CAAG,gDAAgD,iBAAiB;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,yFAAgC;AACjF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,QAAQ,2DAAQ;AAChB;AACA;AACA,QAAQ,2DAAQ;AAChB;AACA;AACA,QAAQ,2DAAQ;AAChB;AACA;AACA,QAAQ,2DAAQ;AAChB;AACA;AACA,QAAQ,2DAAQ;AAChB;AACA;AACA,QAAQ,2DAAQ;AAChB;AACA;AACA,QAAQ,2DAAQ;AAChB;AACA;AACA,QAAQ,2DAAQ;AAChB;AACA;AACA,QAAQ,2DAAQ;AAChB;AACA;AACA,QAAQ,2DAAQ;AAChB;AACA;AACA,QAAQ,2DAAQ;AAChB;AACA;AACA,QAAQ,2DAAQ;AAChB;AACA;AACA,QAAQ,2DAAQ;AAChB;AACA;AACA,QAAQ,2DAAQ;AAChB;AACA;AACA,QAAQ,0DAAU;AAClB;AACA;AACA,QAAQ,0DAAU;AAClB;AACA;AACA,QAAQ,oEAAY;AACpB;AACA;AACA,QAAQ,2EAAM,UAAU,4DAAW;AACnC,QAAQ,wEAAa;AACrB;AACA;AACA,CAAC;AACkB;AACnB;AACA;AACA;AACA,0BAA0B,kCAAkC;AAC5D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD,oC;;;;;;;;;;;AC7OA;AACA,kCAAkC,mBAAO,CAAC,wDAA4C;AACtF;AACA;AACA,cAAc,QAAS,cAAc,6GAA6G,0HAA0H,6GAA6G,6EAA6E,sGAAsG,4DAA4D,uEAAuE,sEAAsE,iFAAiF,6DAA6D,yEAAyE,oHAAoH,iEAAiE,+DAA+D,6EAA6E,kIAAkI,gIAAgI,wFAAwF,GAAG;AAC1mD;AACA;;;;;;;;;;;;ACNA;AACA,2FAA2F,QAAQ,GAAG,yCAAyC,GAAG,yDAAyD,2fAA2f,wBAAwB,GAAG,0EAA0E,qBAAqB;AACh0B;AACA,sB;;;;;;;;;;;;ACHA;AAAA;AAAA;AAA4C;AAC5C,aAAa,iEAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iCAAiC,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACoB;AACrB,uC;;;;;;;;;;;;ACtDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC2B;AAC5B,+C;;;;;;;;;;;;ACPA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,CAAC;AACuB;AACxB,0C;;;;;;;;;;;;ACPA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,CAAC;AACsB;AACvB,yC","file":"vendors~0877c396.6d6021808fdaf3655dce.chunk.js","sourcesContent":["import { PLATFORM } from 'aurelia-framework';\nimport { UxIcon } from './ux-icon';\nexport { UxIconTheme } from './ux-icon-theme';\nexport { UxIcon };\nimport { UxIconMap } from './ux-icon-map';\nexport { UxIconMap };\nexport function configure(config, iconsOrConfig) {\n    config.globalResources(PLATFORM.moduleName('./ux-icon'));\n    var uxConfig = {};\n    if (Array.isArray(iconsOrConfig) && iconsOrConfig.length > 0) {\n        uxConfig.icons = iconsOrConfig;\n    }\n    else if (typeof iconsOrConfig === 'object') {\n        uxConfig = iconsOrConfig;\n    }\n    var uxIconMap = config.container.get(UxIconMap);\n    if (typeof uxConfig.defaultIconWidth === 'number') {\n        uxIconMap.defaultIconWidth = uxConfig.defaultIconWidth;\n    }\n    if (typeof uxConfig.defaultIconHeight === 'number') {\n        uxIconMap.defaultIconHeight = uxConfig.defaultIconHeight;\n    }\n    if (uxConfig.icons) {\n        uxIconMap.registerIcons(uxConfig.icons);\n    }\n}\n//# sourceMappingURL=index.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { customElement, bindable, processAttributes } from 'aurelia-templating';\nimport { Logger } from 'aurelia-logging';\nimport { bindingMode } from 'aurelia-binding';\nimport { inject } from 'aurelia-dependency-injection';\nimport { StyleEngine, processDesignAttributes } from '@aurelia-ux/core';\nimport { UxIconTheme } from './ux-icon-theme';\nimport { UxIconMap } from './ux-icon-map';\nvar UxIcon = /** @class */ (function () {\n    function UxIcon(element, iconMap, styleEngine, logger) {\n        this.element = element;\n        this.iconMap = iconMap;\n        this.styleEngine = styleEngine;\n        this.logger = logger;\n        this.icon = undefined;\n    }\n    UxIcon.prototype.bind = function () {\n        if (this.icon) {\n            this.changeIcon(this.icon);\n        }\n        this.sizeChanged(this.size);\n        this.themeChanged(this.theme);\n    };\n    UxIcon.prototype.sizeChanged = function (newValue) {\n        if (this.size) {\n            if (this.theme === undefined) {\n                this.theme = new UxIconTheme();\n            }\n            this.theme.size = newValue;\n        }\n    };\n    UxIcon.prototype.themeChanged = function (newValue) {\n        this.styleEngine.applyTheme(newValue, this.element);\n    };\n    UxIcon.prototype.iconChanged = function (newValue) {\n        this.changeIcon(newValue);\n    };\n    UxIcon.prototype.changeIcon = function (icon) {\n        var material = this.iconMap.get(icon);\n        if (material) {\n            this.element.innerHTML = material;\n        }\n        else {\n            this.logger.warn('ux-icon: no matching icon found', this.element);\n        }\n    };\n    __decorate([\n        bindable\n    ], UxIcon.prototype, \"size\", void 0);\n    __decorate([\n        bindable\n    ], UxIcon.prototype, \"theme\", void 0);\n    __decorate([\n        bindable({ defaultBindingMode: bindingMode.twoWay })\n    ], UxIcon.prototype, \"icon\", void 0);\n    UxIcon = __decorate([\n        inject(Element, UxIconMap, StyleEngine, Logger),\n        customElement('ux-icon'),\n        processAttributes(processDesignAttributes)\n    ], UxIcon);\n    return UxIcon;\n}());\nexport { UxIcon };\n//# sourceMappingURL=ux-icon.js.map","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"ux-icon {\\n    display: inline-block;\\n    align-self: center;\\n    width: 24px;\\n    width: var(--aurelia-ux--icon-size, 24px);\\n    height: 24px;\\n    height: var(--aurelia-ux--icon-size, 24px);\\n}\\n\\nux-icon > svg {\\n    width: 24px;\\n    width: var(--aurelia-ux--icon-size, 24px);\\n    height: 24px;\\n    height: var(--aurelia-ux--icon-size, 24px);\\n    fill: currentColor;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Module\nvar code = \"<template>\\n  <require from=\\\"./ux-icon.css\\\"></require>\\n  <slot></slot>\\n</template>\\n\";\n// Exports\nmodule.exports = code;","import { bindingMode, PLATFORM } from 'aurelia-framework';\nimport { ValueAttributeObserver, EventSubscriber } from 'aurelia-binding';\nimport { AureliaUX } from '@aurelia-ux/core';\nexport { UxInputTheme } from './ux-input-theme';\nexport { UxInput } from './ux-input';\nexport function configure(config) {\n    config.container.get(AureliaUX).registerUxElementConfig(uxInputConfig);\n    config.globalResources(PLATFORM.moduleName('./ux-input'));\n}\nvar uxInputConfig = {\n    tagName: 'ux-input',\n    properties: {\n        value: {\n            defaultBindingMode: bindingMode.twoWay,\n            getObserver: function (element) {\n                return new ValueAttributeObserver(element, 'value', new EventSubscriber(['change']));\n            }\n        }\n    }\n};\n//# sourceMappingURL=index.js.map","import { PLATFORM } from 'aurelia-framework';\nimport { UxInputInfo } from './ux-input-info';\nexport { UxInputInfo };\nexport { UxInputInfoTheme } from './ux-input-info-theme';\nexport function configure(config) {\n    config.globalResources(PLATFORM.moduleName('./ux-input-info'));\n}\n//# sourceMappingURL=index.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { customElement, bindable } from 'aurelia-templating';\nimport { inject } from 'aurelia-dependency-injection';\nimport { StyleEngine } from '@aurelia-ux/core';\nimport { computedFrom } from 'aurelia-binding';\nvar UxInputInfo = /** @class */ (function () {\n    function UxInputInfo(element, styleEngine) {\n        this.element = element;\n        this.styleEngine = styleEngine;\n        this.uxInputCounter = null;\n    }\n    UxInputInfo.prototype.bind = function () {\n        if (this.target === undefined) {\n            this.findAndSetTarget(this.element);\n        }\n        this.themeChanged(this.theme);\n    };\n    UxInputInfo.prototype.themeChanged = function (newValue) {\n        if (newValue != null && newValue.themeKey == null) {\n            newValue.themeKey = 'input-info';\n        }\n        this.styleEngine.applyTheme(newValue, this.element);\n    };\n    UxInputInfo.prototype.findAndSetTarget = function (element) {\n        var inputElement = element.previousElementSibling;\n        if (!inputElement) {\n            return;\n        }\n        if (inputElement.nodeName === 'UX-INPUT' || inputElement.nodeName === 'UX-TEXTAREA') {\n            this.target = inputElement.au.controller.viewModel;\n        }\n    };\n    Object.defineProperty(UxInputInfo.prototype, \"maxLength\", {\n        get: function () {\n            var target = this.target;\n            if (target.element.tagName === 'UX-INPUT' || target.element.tagName === 'UX-TEXTAREA') {\n                return target.maxlength;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UxInputInfo.prototype, \"length\", {\n        get: function () {\n            var target = this.target;\n            if (target.element.tagName === 'UX-INPUT' || target.element.tagName === 'UX-TEXTAREA') {\n                return target.value.length;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        bindable\n    ], UxInputInfo.prototype, \"target\", void 0);\n    __decorate([\n        bindable\n    ], UxInputInfo.prototype, \"uxInputCounter\", void 0);\n    __decorate([\n        bindable\n    ], UxInputInfo.prototype, \"theme\", void 0);\n    __decorate([\n        computedFrom('target.maxlength')\n    ], UxInputInfo.prototype, \"maxLength\", null);\n    __decorate([\n        computedFrom('target.value')\n    ], UxInputInfo.prototype, \"length\", null);\n    UxInputInfo = __decorate([\n        inject(Element, StyleEngine),\n        customElement('ux-input-info')\n    ], UxInputInfo);\n    return UxInputInfo;\n}());\nexport { UxInputInfo };\n//# sourceMappingURL=ux-input-info.js.map","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ux-input-info {\\n  display: flex;\\n  font-size: 14px;\\n  padding: 0 16px;\\n  width: 100%;\\n  color: #757575;\\n  color: var(--aurelia-ux--input-info-foreground, var(--aurelia-ux--design-control-label-color, #757575));\\n  box-sizing: border-box;\\n  margin-top: 4px;\\n}\\n\\n.ux-input-info>.ux-input-info__hint-text,\\n.ux-input-info>.ux-input-info__error-text {\\n  flex-grow: 1;\\n  display: none;\\n}\\n\\n.ux-input-info>.ux-input-info__counter {\\n  transition: 250ms;\\n  flex-wrap: nowrap;\\n  display: flex;\\n}\\n\\n.ux-input--has-error+.ux-input-info {\\n  color: #F44336;\\n  color: var(--aurelia-ux--input-info-error, var(--aurelia-ux--design-error, #F44336));\\n}\\n\\n.ux-input[disabled]+.ux-input-info {\\n  display: none;\\n}\\n\\n.ux-input-info>.ux-input-info__hint-text:first-child,\\n.ux-input-info>.ux-input-info__error-text:first-child {\\n  display: block;\\n}\\n\\n.ux-input--focused+.ux-input-info .ux-input-info__counter {\\n  /* color: #FF4081;\\n  color: var(--aurelia-ux--design-accent, #FF4081); */\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Module\nvar code = \"<template class=\\\"ux-input-info\\\">\\n  <require from=\\\"./ux-input-info.css\\\"></require>\\n  <span class=\\\"ux-input-info__hint-text\\\">\\n    <slot></slot>\\n  </span>\\n  <div class=\\\"ux-input-info__counter\\\" if.bind=\\\"uxInputCounter !== null && target !== undefined\\\">\\n    <span>${length ? length : 0}</span>\\n    <span if.bind=\\\"maxLength > 0\\\">/${maxLength}</span>\\n  </div>\\n</template>\\n\";\n// Exports\nmodule.exports = code;","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { customElement, bindable } from 'aurelia-templating';\nimport { DOM } from 'aurelia-pal';\nimport { observable, computedFrom } from 'aurelia-binding';\nimport { inject } from 'aurelia-dependency-injection';\nimport { StyleEngine, normalizeBooleanAttribute, getBackgroundColorThroughParents } from '@aurelia-ux/core';\n// tslint:disable-next-line: no-submodule-imports\nimport '@aurelia-ux/core/components/ux-input-component.css';\n// tslint:disable-next-line: no-submodule-imports\nimport '@aurelia-ux/core/components/ux-input-component--outline.css';\nvar UxInput = /** @class */ (function () {\n    function UxInput(element, styleEngine) {\n        this.element = element;\n        this.styleEngine = styleEngine;\n        this.autofocus = null;\n        this.disabled = false;\n        this.readonly = false;\n        this.variant = 'filled';\n        this.dense = false;\n        this.rawValue = '';\n        this.focused = false;\n        Object.setPrototypeOf(element, uxInputElementProto);\n    }\n    UxInput.prototype.bind = function () {\n        var element = this.element;\n        var textbox = this.textbox;\n        var textboxValue = this.textbox.getAttribute('value');\n        if (textboxValue != null) {\n            this.rawValue = textboxValue;\n        }\n        if (this.autofocus || this.autofocus === '') {\n            this.focused = true;\n        }\n        this.dense = normalizeBooleanAttribute('dense', this.dense);\n        if (element.hasAttribute('id')) {\n            var attributeValue = element.getAttribute('id');\n            if (attributeValue) {\n                element.removeAttribute('id');\n                textbox.setAttribute('id', attributeValue);\n            }\n        }\n        if (element.hasAttribute('step')) {\n            var attributeValue = element.getAttribute('step');\n            if (attributeValue) {\n                textbox.setAttribute('step', attributeValue);\n                element.removeAttribute('step');\n            }\n        }\n        this.typeChanged(this.type);\n        if (this.min) {\n            textbox.setAttribute('min', this.min.toString());\n        }\n        if (this.max) {\n            textbox.setAttribute('max', this.max.toString());\n        }\n        if (this.minlength) {\n            textbox.setAttribute('minlength', this.minlength.toString());\n        }\n        if (this.maxlength) {\n            textbox.setAttribute('maxlength', this.maxlength.toString());\n        }\n        this.autocompleteChanged(this.autocomplete);\n        this.themeChanged(this.theme);\n    };\n    UxInput.prototype.attached = function () {\n        this.textbox.addEventListener('change', stopEvent);\n        this.textbox.addEventListener('input', stopEvent);\n        this.variantChanged(this.variant);\n    };\n    UxInput.prototype.detached = function () {\n        this.textbox.removeEventListener('change', stopEvent);\n        this.textbox.removeEventListener('input', stopEvent);\n    };\n    UxInput.prototype.getValue = function () {\n        return this.value;\n    };\n    UxInput.prototype.setValue = function (value) {\n        var oldValue = this.value;\n        var newValue = this.processRawValue(value);\n        if (oldValue !== newValue) {\n            this.value = newValue;\n            this.ignoreRawChanges = true;\n            this.rawValue = newValue === null || newValue === undefined ? '' : newValue.toString();\n            this.ignoreRawChanges = false;\n            this.element.dispatchEvent(DOM.createCustomEvent('change', { bubbles: true }));\n        }\n    };\n    UxInput.prototype.processRawValue = function (rawValue) {\n        var newValue = rawValue;\n        if (this.type === 'number') {\n            newValue = rawValue === '' ? NaN : Number(rawValue);\n            if (isNaN(newValue)) {\n                newValue = null;\n            }\n            else {\n                if (this.min !== undefined && this.min > newValue) {\n                    newValue = this.min;\n                }\n                if (this.max !== undefined && newValue > this.max) {\n                    newValue = this.max;\n                }\n            }\n        }\n        return newValue;\n    };\n    UxInput.prototype.autocompleteChanged = function (newValue) {\n        if (newValue == null) {\n            this.textbox.removeAttribute('autocomplete');\n        }\n        else {\n            this.textbox.setAttribute('autocomplete', newValue);\n        }\n    };\n    UxInput.prototype.themeChanged = function (newValue) {\n        if (newValue != null && newValue.themeKey == null) {\n            newValue.themeKey = 'input';\n        }\n        this.styleEngine.applyTheme(newValue, this.element);\n    };\n    UxInput.prototype.focusedChanged = function (focused) {\n        this.element.classList.toggle('ux-input-component--focused', focused);\n        this.element.dispatchEvent(DOM.createCustomEvent(focused ? 'focus' : 'blur', { bubbles: false }));\n    };\n    UxInput.prototype.typeChanged = function (newValue) {\n        if (![\n            'text',\n            'password',\n            'number',\n            'email',\n            'url',\n            'tel',\n            'search'\n        ].includes(newValue)) {\n            this.type = 'text';\n            return;\n        }\n        this.textbox.setAttribute('type', this.type);\n    };\n    UxInput.prototype.rawValueChanged = function (newValue) {\n        this.element.classList.toggle('ux-input-component--has-value', newValue.length > 0);\n        if (this.ignoreRawChanges) {\n            return;\n        }\n        this.setValue(newValue);\n    };\n    UxInput.prototype.focusInput = function () {\n        this.textbox.focus();\n    };\n    UxInput.prototype.variantChanged = function (newValue) {\n        this.element.style.backgroundColor = newValue === 'outline' ?\n            this.element.style.backgroundColor = getBackgroundColorThroughParents(this.element) :\n            '';\n    };\n    Object.defineProperty(UxInput.prototype, \"placeholderMode\", {\n        get: function () {\n            return typeof this.label !== 'string' || this.label.length === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        bindable\n    ], UxInput.prototype, \"autofocus\", void 0);\n    __decorate([\n        bindable\n    ], UxInput.prototype, \"autocomplete\", void 0);\n    __decorate([\n        bindable\n    ], UxInput.prototype, \"disabled\", void 0);\n    __decorate([\n        bindable\n    ], UxInput.prototype, \"maxlength\", void 0);\n    __decorate([\n        bindable\n    ], UxInput.prototype, \"minlength\", void 0);\n    __decorate([\n        bindable\n    ], UxInput.prototype, \"min\", void 0);\n    __decorate([\n        bindable\n    ], UxInput.prototype, \"max\", void 0);\n    __decorate([\n        bindable\n    ], UxInput.prototype, \"readonly\", void 0);\n    __decorate([\n        bindable\n    ], UxInput.prototype, \"theme\", void 0);\n    __decorate([\n        bindable\n    ], UxInput.prototype, \"label\", void 0);\n    __decorate([\n        bindable\n    ], UxInput.prototype, \"placeholder\", void 0);\n    __decorate([\n        bindable\n    ], UxInput.prototype, \"type\", void 0);\n    __decorate([\n        bindable\n    ], UxInput.prototype, \"variant\", void 0);\n    __decorate([\n        bindable\n    ], UxInput.prototype, \"dense\", void 0);\n    __decorate([\n        observable\n    ], UxInput.prototype, \"rawValue\", void 0);\n    __decorate([\n        observable\n    ], UxInput.prototype, \"focused\", void 0);\n    __decorate([\n        computedFrom('label')\n    ], UxInput.prototype, \"placeholderMode\", null);\n    UxInput = __decorate([\n        inject(Element, StyleEngine),\n        customElement('ux-input')\n    ], UxInput);\n    return UxInput;\n}());\nexport { UxInput };\nfunction stopEvent(e) {\n    e.stopPropagation();\n}\nvar getVm = function (_) { return _.au.controller.viewModel; };\nvar uxInputElementProto = Object.create(HTMLElement.prototype, {\n    value: {\n        get: function () {\n            return getVm(this).getValue();\n        },\n        set: function (value) {\n            getVm(this).setValue(value);\n        }\n    }\n});\n//# sourceMappingURL=ux-input.js.map","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ux-input {\\n  --foreground: var(--aurelia-ux--input-foreground, var(--aurelia-ux--design-control-foreground, #212121));\\n  --foreground-label: var(--aurelia-ux--input-foreground-label, var(--aurelia-ux--design-control-label-color, #757575));\\n  --background: var(--aurelia-ux--input-background, var(--aurelia-ux--design-control-background, #E0E0E0));\\n  --background-hover: var(--aurelia-ux--input-background-hover, #00000027);\\n  --active-color: var(--aurelia-ux--input-active-color, var(--aurelia-ux--design-primary, #3F51B5));\\n\\n  --font-size: var(--aurelia-ux--input-font-size, 16px);\\n  --letter-spacing: var(--aurelia-ux--input-letter-spacing, inherit);\\n  --label-font-size: var(--aurelia-ux--input-label-font-size, 12px);\\n  --label-letter-spacing: var(--aurelia-ux--input-label-letter-spacing, 0.5px);\\n  --line-height: var(--aurelia-ux--input-line-height, 1.6);\\n  --label-line-height: var(--aurelia-ux--input-label-line-height, 1.6);\\n\\n  --border-color: var(--aurelia-ux--input-border-color, var(--aurelia-ux--design-control-label-color, #757575));\\n  --border-radius: var(--aurelia-ux--input-border-radius, 4px);\\n  --border-width: var(--aurelia-ux--input-border-width, 1px);\\n  --border-active-width: var(--aurelia-ux--input-border-active-width, 2px);\\n\\n  --disabled-foreground: var(--aurelia-ux--input-disabled-foreground, var(--aurelia-ux--design-disabled-foreground, #9E9E9E));\\n  --disabled-background: var(--aurelia-ux--input-disabled-background, var(--aurelia-ux--design-disabled-background, #e1e1e1));\\n\\n  --error: var(--aurelia-ux--input-error, var(--aurelia-ux--design-error, #F44336));\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Module\nvar code = \"<template role=\\\"textbox\\\"\\n  class=\\\"ux-input-component ux-input-component--${variant} ${dense ? 'ux-input-component--dense' : ''} ${placeholderMode ? 'ux-input-component--placeholder' : ''} ux-input\\\"\\n  disabled.bind=\\\"disabled & booleanAttr\\\"\\n  readonly.bind=\\\"readonly & booleanAttr\\\"\\n  aria-disabled.bind=\\\"disabled & booleanAttr\\\"\\n  aria-readonly.bind=\\\"readonly & booleanAttr\\\"\\n  click.trigger=\\\"focusInput()\\\">\\n  <require from=\\\"./ux-input.css\\\"></require>\\n\\n  \\n  <slot name=\\\"leading-icon\\\"></slot>\\n\\n  <span class=\\\"ux-input-component__content\\\">\\n    <div class=\\\"ux-input-component__label-background\\\" if.bind=\\\"variant === 'outline' && (label || placeholder)\\\" css=\\\"width: ${labelEl.offsetWidth + 6}px;\\\"></div>\\n    <div class=\\\"ux-input-component__label\\\" ref=\\\"labelEl\\\">${label || placeholder}</div>\\n  \\n    <input\\n      ref=\\\"textbox\\\"\\n      class=\\\"ux-input-component__inner-input\\\"\\n      value.bind=\\\"rawValue\\\"\\n      focus.bind=\\\"focused\\\"\\n      disabled.bind=\\\"disabled & booleanAttr\\\"\\n      readonly.bind=\\\"readonly & booleanAttr\\\"\\n      required.bind=\\\"required & booleanAttr\\\">\\n  </span>\\n\\n  <slot name=\\\"trailing-icon\\\"></slot>\\n\\n  <div class=\\\"ux-input-component__border\\\" show.bind=\\\"!(variant === 'filled' && disabled)\\\"></div>\\n</template>\\n\";\n// Exports\nmodule.exports = code;","import { getLogger } from 'aurelia-logging';\nvar logger = getLogger('ux-icon-map');\nvar UxIconMap = /** @class */ (function () {\n    function UxIconMap() {\n        this.defaultIconWidth = 24;\n        this.defaultIconHeight = 24;\n        this.map = {};\n    }\n    UxIconMap.prototype.registerIcon = function (nameOrIcon, svg) {\n        var name;\n        if (Array.isArray(nameOrIcon) && nameOrIcon.length >= 2) {\n            svg = this.buildSvg(nameOrIcon);\n            name = nameOrIcon[0];\n        }\n        else if (typeof nameOrIcon === 'object' && !Array.isArray(nameOrIcon)) {\n            svg = nameOrIcon.svg;\n            name = nameOrIcon.name;\n        }\n        else if (typeof nameOrIcon === 'string' && typeof svg === 'string') {\n            name = nameOrIcon;\n        }\n        else {\n            logger.warn('Invalid icon', nameOrIcon);\n            return;\n        }\n        this.map[name] = svg;\n    };\n    UxIconMap.prototype.registerIcons = function (icons) {\n        var _this = this;\n        if (Array.isArray(icons)) {\n            icons.map(function (icon) { return _this.registerIcon(icon); });\n        }\n    };\n    UxIconMap.prototype.buildSvg = function (icon) {\n        return \"<svg viewBox=\\\"0 0 \" + (icon[2] || this.defaultIconWidth) + \" \" + (icon[3] || this.defaultIconHeight) + \"\\\">\" + icon[1] + \"</svg>\";\n    };\n    UxIconMap.prototype.has = function (name) {\n        var _this = this;\n        if (typeof name === 'string') {\n            name = [name];\n        }\n        return name.reduce(function (missing, icon) {\n            return missing || _this.map[icon] === undefined;\n        }, false);\n    };\n    UxIconMap.prototype.get = function (name) {\n        return this.map[name];\n    };\n    UxIconMap.prototype.getAllKeys = function () {\n        return Object.keys(this.map);\n    };\n    return UxIconMap;\n}());\nexport { UxIconMap };\n//# sourceMappingURL=ux-icon-map.js.map","var UxInputInfoTheme = /** @class */ (function () {\n    function UxInputInfoTheme() {\n        this.themeKey = 'input-info';\n    }\n    return UxInputInfoTheme;\n}());\nexport { UxInputInfoTheme };\n//# sourceMappingURL=ux-input-info-theme.js.map","var UxInputTheme = /** @class */ (function () {\n    function UxInputTheme() {\n        this.themeKey = 'input';\n    }\n    return UxInputTheme;\n}());\nexport { UxInputTheme };\n//# sourceMappingURL=ux-input-theme.js.map","var UxIconTheme = /** @class */ (function () {\n    function UxIconTheme() {\n        this.themeKey = 'icon';\n    }\n    return UxIconTheme;\n}());\nexport { UxIconTheme };\n//# sourceMappingURL=ux-icon-theme.js.map"],"sourceRoot":""}